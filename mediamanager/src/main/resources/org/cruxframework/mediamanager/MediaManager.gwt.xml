<module rename-to='mediamanager'>
	<inherits name='org.cruxframework.crux.core.Crux' />
	<inherits name='org.cruxframework.crux.gwt.CruxGWTWidgets' />
	<inherits name='org.cruxframework.crux.widgets.CruxWidgets' />
	<inherits name='org.cruxframework.crux.crossdevice.CrossDeviceWidgets' />
	<inherits name='org.cruxframework.crux.themes.widgets.xstandard.XStandard' />
	<inherits name='org.cruxframework.crux.smartfaces.CruxSmartFaces' />
	<inherits name="com.google.gwt.resources.Resources" />
	<inherits name="org.cruxframework.mediamanager.core.MediaManagerCore" />
	<inherits name="org.cruxframework.mediamanager.offline.MediaManagerOffline" />

	<source path='client' />
	<source path='shared' />
	<public path='public' excludes='**/*.crux.xml,**/*.view.xml,**/*.template.xml,**/*.offline.xml' />


<!-- 	Storage using JPA 	-->
<!-- This form of data storage uses the REST service to
 communicate with the server that hosts the database. -->
<!-- 
	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.rest.ArtistRest">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.ArtistProxy" />
	</replace-with>

	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.rest.MediaRest">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.MediaProxy" />
	</replace-with>	

	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.rest.StatisticsRest">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.StatisticsProxy" />
	</replace-with>

	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.rest.LoginRPC">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.LoginProxy" />
	</replace-with>
 -->

<!-- 	Offline storage	-->
<!-- This form of data storage uses the crux offline database.  -->
	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.clientdb.ArtistClientDB">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.ArtistProxy" />
	</replace-with>

	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.clientdb.MediaClientDB">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.MediaProxy" />
	</replace-with>
		
	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.clientdb.StatisticsClientDB">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.StatisticsProxy" />
	</replace-with>
		
	<replace-with class="org.cruxframework.mediamanager.client.proxyfactory.clientdb.LoginClientDB">
		<when-type-is class="org.cruxframework.mediamanager.client.proxy.LoginProxy" />
	</replace-with>

	<!-- To enable super dev mode -->
	
<!-- 	<add-linker name="xsiframe"/> -->
<!-- 	<set-configuration-property name="devModeRedirectEnabled" value="true"/> -->
<!-- 	<set-property name="compiler.useSourceMaps" value="true" /> -->
<!--     <set-property name="user.agent" value="safari" /> -->
     
     <set-property name="device.features" value="smallDisplayTouch"/>
<!--      <set-property name="device.features" value="largeDisplayMouse"/> -->

	<!-- To enable logging -->
	<!--
	<inherits name="com.google.gwt.logging.Logging" />
	<set-property name="gwt.logging.logLevel" value="FINE" />
	<set-property name="gwt.logging.enabled" value="TRUE" />
	<set-property name="gwt.logging.consoleHandler" value="ENABLED" />
	<set-property name="gwt.logging.developmentModeHandler" value="ENABLED" />
	<set-property name="gwt.logging.firebugHandler" value="ENABLED" />
	<set-property name="gwt.logging.popupHandler" value="DISABLED" />
	<set-property name="gwt.logging.hasWidgetsHandler" value="DISABLED" />
	<set-property name="gwt.logging.systemHandler" value="DISABLED" />
	<set-property name="gwt.logging.simpleRemoteHandler" value="DISABLED" />
     -->
</module>